{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/cale/Dev/Typenine/resolve/frontend/pages/_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from \"next/app\";\nimport { fetchAPI } from \"../lib/api\";\nimport \"../styles/index.css\";\nexport default function MyApp({\n  Component,\n  pageProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n} // getInitialProps disables automatic static optimization for pages that don't\n// have getStaticProps. So article, category and home pages still get SSG.\n// Hopefully we can replace this with getStaticProps once this issue is fixed:\n// https://github.com/vercel/next.js/discussions/10949\n\nexport const getInitialProps = async ctx => {\n  // Calls page's `getInitialProps` and fills `appProps.pageProps`\n  const appProps = await App.getInitialProps(ctx); // Fetch global site settings from Strapi\n\n  const global = await fetchAPI(\"/global\"); // Pass the data to our page via props\n\n  return _objectSpread(_objectSpread({}, appProps), {}, {\n    pageProps: {\n      global\n    }\n  });\n};","map":{"version":3,"sources":["/Users/cale/Dev/Typenine/resolve/frontend/pages/_app.tsx"],"names":["App","fetchAPI","MyApp","Component","pageProps","getInitialProps","ctx","appProps","global"],"mappings":";;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AAEA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAO,qBAAP;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAmD;AAChE,sBAAO,QAAC,SAAD,oBAAeA,SAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;AACA;AACA;;AACA,OAAO,MAAMC,eAAe,GAAG,MAAOC,GAAP,IAAoB;AACjD;AACA,QAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACK,eAAJ,CAAoBC,GAApB,CAAvB,CAFiD,CAGjD;;AACA,QAAME,MAAM,GAAG,MAAMP,QAAQ,CAAC,SAAD,CAA7B,CAJiD,CAKjD;;AACA,yCAAYM,QAAZ;AAAsBH,IAAAA,SAAS,EAAE;AAAEI,MAAAA;AAAF;AAAjC;AACD,CAPM","sourcesContent":["import App from \"next/app\";\nimport { AppProps } from \"next/app\";\nimport { fetchAPI } from \"../lib/api\";\nimport \"../styles/index.css\";\n\nexport default function MyApp({ Component, pageProps }: AppProps) {\n  return <Component {...pageProps} />;\n}\n\n// getInitialProps disables automatic static optimization for pages that don't\n// have getStaticProps. So article, category and home pages still get SSG.\n// Hopefully we can replace this with getStaticProps once this issue is fixed:\n// https://github.com/vercel/next.js/discussions/10949\nexport const getInitialProps = async (ctx: any) => {\n  // Calls page's `getInitialProps` and fills `appProps.pageProps`\n  const appProps = await App.getInitialProps(ctx);\n  // Fetch global site settings from Strapi\n  const global = await fetchAPI(\"/global\");\n  // Pass the data to our page via props\n  return { ...appProps, pageProps: { global } };\n};\n"]},"metadata":{},"sourceType":"module"}