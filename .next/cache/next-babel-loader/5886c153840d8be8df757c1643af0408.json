{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/cale/Dev/Typenine/resolve/frontend/pages/articles/[slug].tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from \"next/router\";\nimport ErrorPage from \"next/error\";\nimport Container from \"../../components/container\";\nimport ArticleBody from \"../../components/article-body\";\nimport Header from \"../../components/header\";\nimport ArticleHeader from \"../../components/article-header\";\nimport Layout from \"../../components/layout\";\nimport { getArticleBySlug, getAllArticles } from \"../../lib/api\";\nimport ArticleTitle from \"../../components/article-title\";\nimport Head from \"next/head\";\nimport { CMS_NAME } from \"../../lib/constants\";\nimport markdownToHtml from \"../../lib/markdownToHtml\";\n\nconst Article = ({\n  article,\n  moreArticles,\n  preview\n}) => {\n  const router = useRouter();\n\n  if (!router.isFallback && !(article === null || article === void 0 ? void 0 : article.slug)) {\n    return /*#__PURE__*/_jsxDEV(ErrorPage, {\n      statusCode: 404\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    preview: preview,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), router.isFallback ? /*#__PURE__*/_jsxDEV(ArticleTitle, {\n        children: \"Loading\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"mb-32\",\n          children: [/*#__PURE__*/_jsxDEV(Head, {\n            children: [/*#__PURE__*/_jsxDEV(\"title\", {\n              children: [article.title, \" | Next.js Blog Example with \", CMS_NAME]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n              property: \"og:image\",\n              content: article.ogImage.url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ArticleHeader, {\n            title: article.title,\n            coverImage: article.coverImage,\n            date: article.date,\n            author: article.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ArticleBody, {\n            content: article.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Article;\nexport async function getStaticProps({\n  params\n}) {\n  const article = getArticleBySlug(params.slug, [\"title\", \"date\", \"slug\", \"author\", \"content\", \"ogImage\", \"coverImage\"]);\n  const content = await markdownToHtml(article.content || \"\");\n  return {\n    props: {\n      article: _objectSpread(_objectSpread({}, article), {}, {\n        content\n      })\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const articles = getAllArticles([\"slug\"]);\n  return {\n    paths: articles.map(articles => {\n      return {\n        params: {\n          slug: articles.slug\n        }\n      };\n    }),\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/Users/cale/Dev/Typenine/resolve/frontend/pages/articles/[slug].tsx"],"names":["useRouter","ErrorPage","Container","ArticleBody","Header","ArticleHeader","Layout","getArticleBySlug","getAllArticles","ArticleTitle","Head","CMS_NAME","markdownToHtml","Article","article","moreArticles","preview","router","isFallback","slug","title","ogImage","url","coverImage","date","author","content","getStaticProps","params","props","getStaticPaths","articles","paths","map","fallback"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\nimport ErrorPage from \"next/error\";\nimport Container from \"../../components/container\";\nimport ArticleBody from \"../../components/article-body\";\nimport Header from \"../../components/header\";\nimport ArticleHeader from \"../../components/article-header\";\nimport Layout from \"../../components/layout\";\nimport { getArticleBySlug, getAllArticles } from \"../../lib/api\";\nimport ArticleTitle from \"../../components/article-title\";\nimport Head from \"next/head\";\nimport { CMS_NAME } from \"../../lib/constants\";\nimport markdownToHtml from \"../../lib/markdownToHtml\";\nimport ArticleType from \"../../types/article\";\n\ntype Props = {\n  article: ArticleType;\n  moreArticles: ArticleType[];\n  preview?: boolean;\n};\n\nconst Article = ({ article, moreArticles, preview }: Props) => {\n  const router = useRouter();\n  if (!router.isFallback && !article?.slug) {\n    return <ErrorPage statusCode={404} />;\n  }\n  return (\n    <Layout preview={preview}>\n      <Container>\n        <Header />\n        {router.isFallback ? (\n          <ArticleTitle>Loadingâ€¦</ArticleTitle>\n        ) : (\n          <>\n            <article className=\"mb-32\">\n              <Head>\n                <title>\n                  {article.title} | Next.js Blog Example with {CMS_NAME}\n                </title>\n                <meta property=\"og:image\" content={article.ogImage.url} />\n              </Head>\n              <ArticleHeader\n                title={article.title}\n                coverImage={article.coverImage}\n                date={article.date}\n                author={article.author}\n              />\n              <ArticleBody content={article.content} />\n            </article>\n          </>\n        )}\n      </Container>\n    </Layout>\n  );\n};\n\nexport default Article;\n\ntype Params = {\n  params: {\n    slug: string;\n  };\n};\n\nexport async function getStaticProps({ params }: Params) {\n  const article = getArticleBySlug(params.slug, [\n    \"title\",\n    \"date\",\n    \"slug\",\n    \"author\",\n    \"content\",\n    \"ogImage\",\n    \"coverImage\",\n  ]);\n  const content = await markdownToHtml(article.content || \"\");\n\n  return {\n    props: {\n      article: {\n        ...article,\n        content,\n      },\n    },\n  };\n}\n\nexport async function getStaticPaths() {\n  const articles = getAllArticles([\"slug\"]);\n\n  return {\n    paths: articles.map((articles) => {\n      return {\n        params: {\n          slug: articles.slug,\n        },\n      };\n    }),\n    fallback: false,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}