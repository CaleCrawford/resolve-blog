{"ast":null,"code":"var _jsxFileName = \"/Users/cale/Dev/Typenine/resolve/frontend/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from \"next/app\";\nimport Container from \"../components/container\";\nimport MoreStories from \"../components/more-stories\";\nimport HeroPost from \"../components/hero-post\";\nimport Intro from \"../components/intro\";\nimport Layout from \"../components/layout\";\nimport { fetchAPI } from \"../lib/api\";\nimport Head from \"next/head\";\nimport { CMS_NAME } from \"../lib/constants\";\n\nconst Index = ({\n  allPosts\n}) => {\n  const heroPost = allPosts[0];\n  const morePosts = allPosts.slice(1);\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, \"Next.js Blog Example with \", CMS_NAME)), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(Intro, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }), heroPost && __jsx(HeroPost, {\n    title: heroPost.title,\n    coverImage: heroPost.coverImage,\n    date: heroPost.date,\n    author: heroPost.author,\n    slug: heroPost.slug,\n    excerpt: heroPost.excerpt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), morePosts.length > 0 && __jsx(MoreStories, {\n    posts: morePosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 36\n    }\n  }))));\n};\n\nexport default Index; // export const getStaticProps = async () => {\n//   const allPosts = getAllPosts([\n//     \"title\",\n//     \"date\",\n//     \"slug\",\n//     \"author\",\n//     \"coverImage\",\n//     \"excerpt\",\n//   ]);\n//   return {\n//     props: { allPosts },\n//   };\n// };\n// getInitialProps disables automatic static optimization for pages that don't\n// have getStaticProps. So article, category and home pages still get SSG.\n// Hopefully we can replace this with getStaticProps once this issue is fixed:\n// https://github.com/vercel/next.js/discussions/10949\n\nexport const getInitialProps = async ctx => {\n  // Calls page's `getInitialProps` and fills `appProps.pageProps`\n  const appProps = await App.getInitialProps(ctx); // Fetch global site settings from Strapi\n\n  const global = await fetchAPI(\"/global\"); // Pass the data to our page via props\n\n  return _objectSpread(_objectSpread({}, appProps), {}, {\n    pageProps: {\n      global\n    }\n  });\n};","map":{"version":3,"sources":["/Users/cale/Dev/Typenine/resolve/frontend/pages/index.tsx"],"names":["App","Container","MoreStories","HeroPost","Intro","Layout","fetchAPI","Head","CMS_NAME","Index","allPosts","heroPost","morePosts","slice","title","coverImage","date","author","slug","excerpt","length","getInitialProps","ctx","appProps","global","pageProps"],"mappings":";;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAOA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAyB;AACrC,QAAMC,QAAQ,GAAGD,QAAQ,CAAC,CAAD,CAAzB;AACA,QAAME,SAAS,GAAGF,QAAQ,CAACG,KAAT,CAAe,CAAf,CAAlB;AACA,SACE,4BACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAkCL,QAAlC,CADF,CADF,EAIE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGG,QAAQ,IACP,MAAC,QAAD;AACE,IAAA,KAAK,EAAEA,QAAQ,CAACG,KADlB;AAEE,IAAA,UAAU,EAAEH,QAAQ,CAACI,UAFvB;AAGE,IAAA,IAAI,EAAEJ,QAAQ,CAACK,IAHjB;AAIE,IAAA,MAAM,EAAEL,QAAQ,CAACM,MAJnB;AAKE,IAAA,IAAI,EAAEN,QAAQ,CAACO,IALjB;AAME,IAAA,OAAO,EAAEP,QAAQ,CAACQ,OANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAYGP,SAAS,CAACQ,MAAV,GAAmB,CAAnB,IAAwB,MAAC,WAAD;AAAa,IAAA,KAAK,EAAER,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZ3B,CAJF,CADF,CADF;AAuBD,CA1BD;;AA4BA,eAAeH,KAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA,OAAO,MAAMY,eAAe,GAAG,MAAOC,GAAP,IAAoB;AACjD;AACA,QAAMC,QAAQ,GAAG,MAAMvB,GAAG,CAACqB,eAAJ,CAAoBC,GAApB,CAAvB,CAFiD,CAGjD;;AACA,QAAME,MAAM,GAAG,MAAMlB,QAAQ,CAAC,SAAD,CAA7B,CAJiD,CAKjD;;AACA,yCAAYiB,QAAZ;AAAsBE,IAAAA,SAAS,EAAE;AAAED,MAAAA;AAAF;AAAjC;AACD,CAPM","sourcesContent":["import App from \"next/app\";\nimport Container from \"../components/container\";\nimport MoreStories from \"../components/more-stories\";\nimport HeroPost from \"../components/hero-post\";\nimport Intro from \"../components/intro\";\nimport Layout from \"../components/layout\";\nimport { fetchAPI } from \"../lib/api\";\nimport Head from \"next/head\";\nimport { CMS_NAME } from \"../lib/constants\";\nimport Post from \"../types/post\";\n\ntype Props = {\n  allPosts: Post[];\n};\n\nconst Index = ({ allPosts }: Props) => {\n  const heroPost = allPosts[0];\n  const morePosts = allPosts.slice(1);\n  return (\n    <>\n      <Layout>\n        <Head>\n          <title>Next.js Blog Example with {CMS_NAME}</title>\n        </Head>\n        <Container>\n          <Intro />\n          {heroPost && (\n            <HeroPost\n              title={heroPost.title}\n              coverImage={heroPost.coverImage}\n              date={heroPost.date}\n              author={heroPost.author}\n              slug={heroPost.slug}\n              excerpt={heroPost.excerpt}\n            />\n          )}\n          {morePosts.length > 0 && <MoreStories posts={morePosts} />}\n        </Container>\n      </Layout>\n    </>\n  );\n};\n\nexport default Index;\n\n// export const getStaticProps = async () => {\n//   const allPosts = getAllPosts([\n//     \"title\",\n//     \"date\",\n//     \"slug\",\n//     \"author\",\n//     \"coverImage\",\n//     \"excerpt\",\n//   ]);\n\n//   return {\n//     props: { allPosts },\n//   };\n// };\n\n// getInitialProps disables automatic static optimization for pages that don't\n// have getStaticProps. So article, category and home pages still get SSG.\n// Hopefully we can replace this with getStaticProps once this issue is fixed:\n// https://github.com/vercel/next.js/discussions/10949\nexport const getInitialProps = async (ctx: any) => {\n  // Calls page's `getInitialProps` and fills `appProps.pageProps`\n  const appProps = await App.getInitialProps(ctx);\n  // Fetch global site settings from Strapi\n  const global = await fetchAPI(\"/global\");\n  // Pass the data to our page via props\n  return { ...appProps, pageProps: { global } };\n};\n"]},"metadata":{},"sourceType":"module"}